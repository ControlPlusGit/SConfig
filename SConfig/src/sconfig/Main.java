/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sconfig;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.io.FileWriter;
import java.io.IOException;
import javafx.application.Platform;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.JFrame;
import javax.swing.JOptionPane; 
import jssc.SerialPort;
import static jssc.SerialPort.MASK_RXCHAR;
import jssc.SerialPortEvent;
import jssc.SerialPortException;
import jssc.SerialPortList;
import java.util.ArrayList;

/**
 *
 * @author Vitor
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main2
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        tbpanemodelo = new javax.swing.JTabbedPane();
        tbpaneEmpilhadeira = new javax.swing.JTabbedPane();
        panelGeral = new javax.swing.JPanel();
        lblParamGerais = new javax.swing.JLabel();
        lblIdEmpilhadeira = new javax.swing.JLabel();
        lblSsidWifi = new javax.swing.JLabel();
        lblSenhaWifi = new javax.swing.JLabel();
        lblServidorPrincipal = new javax.swing.JLabel();
        lblIpPrincipal = new javax.swing.JLabel();
        lblPortaPrincipal = new javax.swing.JLabel();
        txtfIdEmpilhadeira = new javax.swing.JTextField();
        txtfSsidWifi = new javax.swing.JTextField();
        txtfIpPrincipal = new javax.swing.JTextField();
        txtfPortaPrincipal = new javax.swing.JTextField();
        lblDicaIdLeitor = new javax.swing.JLabel();
        lblDicaIpPrincipal = new javax.swing.JLabel();
        lblDicaPortaPrincipal = new javax.swing.JLabel();
        lblDicaSsidWifi = new javax.swing.JLabel();
        txtfSenhaWifi = new javax.swing.JPasswordField();
        lblDicaSenhaWifi = new javax.swing.JLabel();
        separador1 = new javax.swing.JSeparator();
        separador2 = new javax.swing.JSeparator();
        txtfIpBackup = new javax.swing.JTextField();
        lblIpBackup = new javax.swing.JLabel();
        lblServidorBackup = new javax.swing.JLabel();
        lblPortaBackup = new javax.swing.JLabel();
        txtfPortaBackup = new javax.swing.JTextField();
        lblDicaPortaBackup = new javax.swing.JLabel();
        lblDicaIpBackup = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtfFrequenciaDeOperacao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        panelAntenas = new javax.swing.JPanel();
        panelAntena1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtfClenAnt1 = new javax.swing.JTextField();
        txtfCoutAnt1 = new javax.swing.JTextField();
        txtfCinAnt1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtfReflexaoAnt1 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txtfRssiMinAnt1 = new javax.swing.JSpinner();
        panelAntena2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtfClenAnt2 = new javax.swing.JTextField();
        txtfCoutAnt2 = new javax.swing.JTextField();
        txtfCinAnt2 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        txtfReflexaoAnt2 = new javax.swing.JTextField();
        txtfRssiMinAnt2 = new javax.swing.JSpinner();
        panelAntena3 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        txtfClenAnt3 = new javax.swing.JTextField();
        txtfCoutAnt3 = new javax.swing.JTextField();
        txtfCinAnt3 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        txtfReflexaoAnt3 = new javax.swing.JTextField();
        txtfRssiMinAnt3 = new javax.swing.JSpinner();
        panelAntena4 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txtfClenAnt4 = new javax.swing.JTextField();
        txtfCoutAnt4 = new javax.swing.JTextField();
        txtfCinAnt4 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        txtfReflexaoAnt4 = new javax.swing.JTextField();
        txtfRssiMinAnt4 = new javax.swing.JSpinner();
        btnCalibracaoAuto = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        toolbarPrincipal = new javax.swing.JToolBar();
        btnGravar = new javax.swing.JButton();
        btnLer = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jToolBar1 = new javax.swing.JToolBar();
        lblDicaIdLeitor1 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        cbPorts = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnAtualizar = new javax.swing.JButton();
        menuPrincipal = new javax.swing.JMenuBar();
        menubarArquivo = new javax.swing.JMenu();
        menuNovo = new javax.swing.JMenu();
        menuNovoArquivoConfig = new javax.swing.JMenu();
        menuNovoArqConfigEmp = new javax.swing.JMenuItem();
        menuNovoArqConfigPortal = new javax.swing.JMenuItem();
        menuSalvar = new javax.swing.JMenuItem();
        menuSalvarComo = new javax.swing.JMenuItem();
        menuAbrir = new javax.swing.JMenuItem();
        menuSair = new javax.swing.JMenuItem();
        menubarAjuda = new javax.swing.JMenu();
        menuSobre = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SConfig+");
        setMinimumSize(new java.awt.Dimension(770, 415));
        setSize(new java.awt.Dimension(830, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tbpanemodelo.setPreferredSize(new java.awt.Dimension(770, 342));

        lblParamGerais.setText("Parâmetros Gerais:");

        lblIdEmpilhadeira.setText("Id da empilhadeira:");

        lblSsidWifi.setText("SSID da rede wi-fi:");

        lblSenhaWifi.setText("Senha da rede wi-fi:");

        lblServidorPrincipal.setText("Servidor principal (SARS)");

        lblIpPrincipal.setText("Ip:");

        lblPortaPrincipal.setText("Porta:");

        txtfIdEmpilhadeira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfIdEmpilhadeiraActionPerformed(evt);
            }
        });

        lblDicaIdLeitor.setText("(4 caracteres 0-9 / A-Z)");

        lblDicaIpPrincipal.setText("(192.168.0.2)");

        lblDicaPortaPrincipal.setText("(0-65534)");

        lblDicaSsidWifi.setText("(máximo de 16 caracteres 0-9 / A-Z | Colocar um \"\\\" antes de caracteres especiais. Ex: \"\\@bacaxi\")");

        txtfSenhaWifi.setText("jPasswordField1");

        lblDicaSenhaWifi.setText("(máximo de 16 caracteres 0-9 / A-Z | Colocar um \"\\\" antes de caracteres especiais. Ex: \"\\@bacaxi\")");

        separador2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblIpBackup.setText("Ip:");

        lblServidorBackup.setText("Servidor backup (SARS)");

        lblPortaBackup.setText("Porta:");

        lblDicaPortaBackup.setText("(0-65534)");

        lblDicaIpBackup.setText("(192.168.0.2)");

        jLabel9.setText("Mhz");

        jLabel3.setText("Frequência de operação:");

        javax.swing.GroupLayout panelGeralLayout = new javax.swing.GroupLayout(panelGeral);
        panelGeral.setLayout(panelGeralLayout);
        panelGeralLayout.setHorizontalGroup(
            panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGeralLayout.createSequentialGroup()
                        .addComponent(separador1)
                        .addGap(127, 127, 127))
                    .addGroup(panelGeralLayout.createSequentialGroup()
                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelGeralLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelGeralLayout.createSequentialGroup()
                                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblPortaPrincipal)
                                            .addComponent(lblIpPrincipal))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelGeralLayout.createSequentialGroup()
                                                .addComponent(txtfPortaPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblDicaPortaPrincipal))
                                            .addGroup(panelGeralLayout.createSequentialGroup()
                                                .addComponent(txtfIpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblDicaIpPrincipal))))
                                    .addGroup(panelGeralLayout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(lblServidorPrincipal)))
                                .addGap(18, 18, 18)
                                .addComponent(separador2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelGeralLayout.createSequentialGroup()
                                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblPortaBackup)
                                            .addComponent(lblIpBackup))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelGeralLayout.createSequentialGroup()
                                                .addComponent(txtfPortaBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblDicaPortaBackup))
                                            .addGroup(panelGeralLayout.createSequentialGroup()
                                                .addComponent(txtfIpBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblDicaIpBackup))))
                                    .addGroup(panelGeralLayout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(lblServidorBackup))))
                            .addGroup(panelGeralLayout.createSequentialGroup()
                                .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelGeralLayout.createSequentialGroup()
                                        .addComponent(lblSenhaWifi)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtfSenhaWifi, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelGeralLayout.createSequentialGroup()
                                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblIdEmpilhadeira)
                                            .addComponent(lblSsidWifi))
                                        .addGap(18, 18, 18)
                                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtfIdEmpilhadeira, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                            .addComponent(txtfSsidWifi))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblDicaSsidWifi, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblDicaIdLeitor))
                                    .addComponent(lblDicaSenhaWifi, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(panelGeralLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtfFrequenciaDeOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9)))
                        .addContainerGap(76, Short.MAX_VALUE))
                    .addGroup(panelGeralLayout.createSequentialGroup()
                        .addComponent(lblParamGerais)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelGeralLayout.setVerticalGroup(
            panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblParamGerais)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtfFrequenciaDeOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdEmpilhadeira)
                    .addComponent(txtfIdEmpilhadeira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDicaIdLeitor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfSsidWifi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSsidWifi)
                    .addComponent(lblDicaSsidWifi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSenhaWifi)
                    .addComponent(txtfSenhaWifi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDicaSenhaWifi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(separador1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGeralLayout.createSequentialGroup()
                        .addComponent(lblServidorPrincipal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIpPrincipal)
                            .addComponent(txtfIpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDicaIpPrincipal))
                        .addGap(9, 9, 9)
                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfPortaPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPortaPrincipal)
                            .addComponent(lblDicaPortaPrincipal)))
                    .addGroup(panelGeralLayout.createSequentialGroup()
                        .addComponent(lblServidorBackup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIpBackup)
                            .addComponent(txtfIpBackup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDicaIpBackup))
                        .addGap(9, 9, 9)
                        .addGroup(panelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfPortaBackup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPortaBackup)
                            .addComponent(lblDicaPortaBackup)))
                    .addComponent(separador2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        tbpaneEmpilhadeira.addTab("Geral", panelGeral);

        panelAntena1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Antena 1:");

        jLabel4.setText("RSSI min:");

        jLabel5.setText("Capacitores:");

        jLabel6.setText("Cin: ");

        jLabel7.setText("Clen:");

        jLabel8.setText("Cout:");

        txtfClenAnt1.setEditable(false);

        txtfCoutAnt1.setEditable(false);

        txtfCinAnt1.setEditable(false);

        jLabel10.setText("dbm (0-125)");

        jLabel11.setText("(0-32)");

        jLabel12.setText("(0-32)");

        jLabel13.setText("(0-32)");

        jLabel26.setText("Reflexão:");

        txtfReflexaoAnt1.setEditable(false);

        jLabel32.setText("dbm");

        txtfRssiMinAnt1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtfRssiMinAnt1InputMethodTextChanged(evt);
            }
        });

        javax.swing.GroupLayout panelAntena1Layout = new javax.swing.GroupLayout(panelAntena1);
        panelAntena1.setLayout(panelAntena1Layout);
        panelAntena1Layout.setHorizontalGroup(
            panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAntena1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(panelAntena1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelAntena1Layout.createSequentialGroup()
                                .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelAntena1Layout.createSequentialGroup()
                                        .addComponent(txtfCoutAnt1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13))
                                    .addGroup(panelAntena1Layout.createSequentialGroup()
                                        .addComponent(txtfClenAnt1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12))))
                            .addGroup(panelAntena1Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfReflexaoAnt1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32))
                    .addComponent(jLabel5)
                    .addGroup(panelAntena1Layout.createSequentialGroup()
                        .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAntena1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfRssiMinAnt1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAntena1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfCinAnt1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAntena1Layout.setVerticalGroup(
            panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAntena1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10)
                    .addComponent(txtfRssiMinAnt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfCinAnt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel6))
                .addGap(9, 9, 9)
                .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAntena1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel8))
                    .addGroup(panelAntena1Layout.createSequentialGroup()
                        .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfClenAnt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(9, 9, 9)
                        .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfCoutAnt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))))
                .addGap(9, 9, 9)
                .addGroup(panelAntena1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfReflexaoAnt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel26))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        panelAntena2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Antena 2:");

        jLabel15.setText("RSSI min:");

        jLabel16.setText("Capacitores:");

        jLabel17.setText("Cin: ");

        jLabel18.setText("Clen:");

        jLabel19.setText("Cout:");

        txtfClenAnt2.setEditable(false);

        txtfCoutAnt2.setEditable(false);

        txtfCinAnt2.setEditable(false);

        jLabel21.setText("dbm (0-125)");

        jLabel22.setText("(0-32)");

        jLabel23.setText("(0-32)");

        jLabel24.setText("(0-32)");

        jLabel38.setText("Reflexão:");

        jLabel44.setText("dbm");

        txtfReflexaoAnt2.setEditable(false);

        txtfRssiMinAnt2.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtfRssiMinAnt2InputMethodTextChanged(evt);
            }
        });

        javax.swing.GroupLayout panelAntena2Layout = new javax.swing.GroupLayout(panelAntena2);
        panelAntena2.setLayout(panelAntena2Layout);
        panelAntena2Layout.setHorizontalGroup(
            panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAntena2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(panelAntena2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAntena2Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfCinAnt2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel22))
                            .addGroup(panelAntena2Layout.createSequentialGroup()
                                .addGroup(panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAntena2Layout.createSequentialGroup()
                                        .addComponent(jLabel38)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtfReflexaoAnt2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAntena2Layout.createSequentialGroup()
                                        .addGroup(panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel18)
                                            .addComponent(jLabel19))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelAntena2Layout.createSequentialGroup()
                                                .addComponent(txtfCoutAnt2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel24))
                                            .addGroup(panelAntena2Layout.createSequentialGroup()
                                                .addComponent(txtfClenAnt2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel23)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel44))))
                    .addComponent(jLabel16)
                    .addGroup(panelAntena2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfRssiMinAnt2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAntena2Layout.setVerticalGroup(
            panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAntena2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel21)
                    .addComponent(txtfRssiMinAnt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfCinAnt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel17))
                .addGap(9, 9, 9)
                .addGroup(panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtfClenAnt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(9, 9, 9)
                .addGroup(panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfCoutAnt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel24))
                .addGap(9, 9, 9)
                .addGroup(panelAntena2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfReflexaoAnt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(jLabel38))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        panelAntena3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel37.setText("Antena 3:");

        jLabel39.setText("RSSI min:");

        jLabel40.setText("Capacitores:");

        jLabel41.setText("Cin: ");

        jLabel42.setText("Clen:");

        jLabel43.setText("Cout:");

        txtfClenAnt3.setEditable(false);

        txtfCoutAnt3.setEditable(false);

        txtfCinAnt3.setEditable(false);

        jLabel45.setText("dbm (0-125)");

        jLabel46.setText("(0-32)");

        jLabel47.setText("(0-32)");

        jLabel48.setText("(0-32)");

        jLabel50.setText("dbm");

        jLabel49.setText("Reflexão:");

        txtfReflexaoAnt3.setEditable(false);

        txtfRssiMinAnt3.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtfRssiMinAnt3InputMethodTextChanged(evt);
            }
        });

        javax.swing.GroupLayout panelAntena3Layout = new javax.swing.GroupLayout(panelAntena3);
        panelAntena3.setLayout(panelAntena3Layout);
        panelAntena3Layout.setHorizontalGroup(
            panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAntena3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addGroup(panelAntena3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAntena3Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel41)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfCinAnt3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel46))
                            .addGroup(panelAntena3Layout.createSequentialGroup()
                                .addGroup(panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAntena3Layout.createSequentialGroup()
                                        .addComponent(jLabel49)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtfReflexaoAnt3))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAntena3Layout.createSequentialGroup()
                                        .addGroup(panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel42)
                                            .addComponent(jLabel43))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelAntena3Layout.createSequentialGroup()
                                                .addComponent(txtfCoutAnt3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel48))
                                            .addGroup(panelAntena3Layout.createSequentialGroup()
                                                .addComponent(txtfClenAnt3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel47)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel50))))
                    .addComponent(jLabel40)
                    .addGroup(panelAntena3Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfRssiMinAnt3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel45)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAntena3Layout.setVerticalGroup(
            panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAntena3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jLabel45)
                    .addComponent(txtfRssiMinAnt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfCinAnt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46)
                    .addComponent(jLabel41))
                .addGap(9, 9, 9)
                .addGroup(panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(txtfClenAnt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47))
                .addGap(9, 9, 9)
                .addGroup(panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfCoutAnt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel48))
                .addGap(9, 9, 9)
                .addGroup(panelAntena3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfReflexaoAnt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50)
                    .addComponent(jLabel49))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        panelAntena4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel25.setText("Antena 4:");

        jLabel27.setText("RSSI min:");

        jLabel28.setText("Capacitores:");

        jLabel29.setText("Cin: ");

        jLabel30.setText("Clen:");

        jLabel31.setText("Cout:");

        txtfClenAnt4.setEditable(false);

        txtfCoutAnt4.setEditable(false);

        txtfCinAnt4.setEditable(false);

        jLabel33.setText("dbm (0-125)");

        jLabel34.setText("(0-32)");

        jLabel35.setText("(0-32)");

        jLabel36.setText("(0-32)");

        jLabel51.setText("Reflexão:");

        jLabel52.setText("dbm");

        txtfReflexaoAnt4.setEditable(false);

        txtfRssiMinAnt4.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtfRssiMinAnt4InputMethodTextChanged(evt);
            }
        });

        javax.swing.GroupLayout panelAntena4Layout = new javax.swing.GroupLayout(panelAntena4);
        panelAntena4.setLayout(panelAntena4Layout);
        panelAntena4Layout.setHorizontalGroup(
            panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAntena4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addGroup(panelAntena4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAntena4Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfCinAnt4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel34))
                            .addGroup(panelAntena4Layout.createSequentialGroup()
                                .addGroup(panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAntena4Layout.createSequentialGroup()
                                        .addComponent(jLabel51)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtfReflexaoAnt4))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAntena4Layout.createSequentialGroup()
                                        .addGroup(panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel30)
                                            .addComponent(jLabel31))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelAntena4Layout.createSequentialGroup()
                                                .addComponent(txtfCoutAnt4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel36))
                                            .addGroup(panelAntena4Layout.createSequentialGroup()
                                                .addComponent(txtfClenAnt4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel35)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel52))))
                    .addComponent(jLabel28)
                    .addGroup(panelAntena4Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfRssiMinAnt4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAntena4Layout.setVerticalGroup(
            panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAntena4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel33)
                    .addComponent(txtfRssiMinAnt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfCinAnt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel29))
                .addGap(9, 9, 9)
                .addGroup(panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(txtfClenAnt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35))
                .addGap(9, 9, 9)
                .addGroup(panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfCoutAnt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel36))
                .addGap(9, 9, 9)
                .addGroup(panelAntena4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfReflexaoAnt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel52)
                    .addComponent(jLabel51))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        btnCalibracaoAuto.setText("Calibração automática");
        btnCalibracaoAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalibracaoAutoActionPerformed(evt);
            }
        });

        jLabel14.setText("AVISO: Sempre realizar a calibração automática com as antenas conectadas!");

        javax.swing.GroupLayout panelAntenasLayout = new javax.swing.GroupLayout(panelAntenas);
        panelAntenas.setLayout(panelAntenasLayout);
        panelAntenasLayout.setHorizontalGroup(
            panelAntenasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAntenasLayout.createSequentialGroup()
                .addComponent(panelAntena1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelAntena2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAntena3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelAntena4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panelAntenasLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnCalibracaoAuto)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAntenasLayout.setVerticalGroup(
            panelAntenasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAntenasLayout.createSequentialGroup()
                .addGroup(panelAntenasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelAntena2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelAntena1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelAntena3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelAntena4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAntenasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalibracaoAuto)
                    .addComponent(jLabel14))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        tbpaneEmpilhadeira.addTab("Antenas", panelAntenas);

        tbpanemodelo.addTab("tab1", tbpaneEmpilhadeira);

        toolbarPrincipal.setRollover(true);
        toolbarPrincipal.setMinimumSize(new java.awt.Dimension(124, 32));

        btnGravar.setText("Gravar");
        btnGravar.setFocusable(false);
        btnGravar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGravar.setMaximumSize(new java.awt.Dimension(50, 30));
        btnGravar.setMinimumSize(new java.awt.Dimension(50, 30));
        btnGravar.setPreferredSize(new java.awt.Dimension(50, 30));
        btnGravar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });
        toolbarPrincipal.add(btnGravar);

        btnLer.setText("Ler");
        btnLer.setFocusable(false);
        btnLer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLer.setMaximumSize(new java.awt.Dimension(50, 30));
        btnLer.setMinimumSize(new java.awt.Dimension(50, 30));
        btnLer.setPreferredSize(new java.awt.Dimension(50, 30));
        btnLer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLerActionPerformed(evt);
            }
        });
        toolbarPrincipal.add(btnLer);

        jSeparator2.setMinimumSize(new java.awt.Dimension(6, 3));
        jSeparator2.setPreferredSize(new java.awt.Dimension(6, 3));
        toolbarPrincipal.add(jSeparator2);

        jToolBar1.setRollover(true);

        lblDicaIdLeitor1.setText("Porta COM:");
        jToolBar1.add(lblDicaIdLeitor1);

        jSeparator3.setMinimumSize(new java.awt.Dimension(6, 3));
        jSeparator3.setPreferredSize(new java.awt.Dimension(6, 3));
        jToolBar1.add(jSeparator3);

        cbPorts.setLightWeightPopupEnabled(false);
        cbPorts.setMaximumSize(new java.awt.Dimension(80, 25));
        cbPorts.setMinimumSize(new java.awt.Dimension(80, 25));
        cbPorts.setPreferredSize(new java.awt.Dimension(80, 25));
        jToolBar1.add(cbPorts);

        jSeparator1.setMinimumSize(new java.awt.Dimension(6, 3));
        jSeparator1.setPreferredSize(new java.awt.Dimension(6, 3));
        jToolBar1.add(jSeparator1);

        btnAtualizar.setText("Atualizar");
        btnAtualizar.setFocusable(false);
        btnAtualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtualizar.setMaximumSize(new java.awt.Dimension(70, 30));
        btnAtualizar.setMinimumSize(new java.awt.Dimension(70, 30));
        btnAtualizar.setPreferredSize(new java.awt.Dimension(70, 30));
        btnAtualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAtualizar);

        toolbarPrincipal.add(jToolBar1);

        menubarArquivo.setText("Arquivo");

        menuNovo.setText("Novo");

        menuNovoArquivoConfig.setText("Arquivo de configuração");

        menuNovoArqConfigEmp.setText("Empilhadeira");
        menuNovoArqConfigEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNovoArqConfigEmpActionPerformed(evt);
            }
        });
        menuNovoArquivoConfig.add(menuNovoArqConfigEmp);

        menuNovoArqConfigPortal.setText("Portal");
        menuNovoArquivoConfig.add(menuNovoArqConfigPortal);

        menuNovo.add(menuNovoArquivoConfig);

        menubarArquivo.add(menuNovo);

        menuSalvar.setText("Salvar");
        menuSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalvarActionPerformed(evt);
            }
        });
        menubarArquivo.add(menuSalvar);

        menuSalvarComo.setText("Salvar como...");
        menuSalvarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalvarComoActionPerformed(evt);
            }
        });
        menubarArquivo.add(menuSalvarComo);

        menuAbrir.setText("Abrir");
        menuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirActionPerformed(evt);
            }
        });
        menubarArquivo.add(menuAbrir);

        menuSair.setText("Sair");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        menubarArquivo.add(menuSair);

        menuPrincipal.add(menubarArquivo);

        menubarAjuda.setText("Ajuda");

        menuSobre.setText("Sobre");
        menuSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSobreActionPerformed(evt);
            }
        });
        menubarAjuda.add(menuSobre);

        menuPrincipal.add(menubarAjuda);

        setJMenuBar(menuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbpanemodelo, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(toolbarPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolbarPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbpanemodelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuNovoArqConfigEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNovoArqConfigEmpActionPerformed
        // TODO add your handling code here:
        Empilhadeira novaEmpilhadeira = new Empilhadeira();
        
        salvarArquivo(novaEmpilhadeira);
        
        tbpanemodelo.removeAll();
        
        if(((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)).tipoDoProduto == LeitorMarsOne.TipoProduto.EMPILHADEIRA){
            adicionarAbaDeEmpilhadeira(((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)).nomeDoArquivo,((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1))); 
            tbpanemodelo.setVisible(true); 
        }
    }//GEN-LAST:event_menuNovoArqConfigEmpActionPerformed

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuSairActionPerformed

    private void menuSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSobreActionPerformed
        Dimension d= Toolkit.getDefaultToolkit().getScreenSize(); // get screen size       
                
        sobre.setLocation(d.width/2-(sobre.getWidth()/2),d.height/2-(sobre.getHeight()/2));        
        sobre.setVisible(true);
    }//GEN-LAST:event_menuSobreActionPerformed

    private void txtfIdEmpilhadeiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfIdEmpilhadeiraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfIdEmpilhadeiraActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        empresa             = "Control + Plus";        
        autor               = "Vitor M. dos S. Alho";
        versao              = "01";
        revisao             = "00";
        dataUltimaAlteracao = "18/03/2020";
        
        sobre = new Sobre();
        
        tbpanemodelo.removeAll();
        tbpanemodelo.setVisible(false);
        
        tbpaneEmpilhadeira.setVisible(false);
        
        atualizarPortasCom();       
    }//GEN-LAST:event_formWindowOpened

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
        atualizarPortasCom();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        // TODO add your handling code here:
        int posicao = 0;
        
            for(int i=0;i<equipamentosAbertos.size();i++){
                if(tbpanemodelo.indexOfTab(((LeitorMarsOne)equipamentosAbertos.get(i)).nomeDoArquivo) >= 0){
                    posicao = tbpanemodelo.indexOfTab(((LeitorMarsOne)equipamentosAbertos.get(i)).nomeDoArquivo);
                }
            } 
            
        fecharConexaoSerial();
        salvar();
        gravarParametrosNoLeitor((LeitorMarsOne)equipamentosAbertos.get(posicao),cbPorts.getSelectedItem().toString());
        
        LeitorMarsOne novoLeitor=null;
        novoLeitor = lerParametrosDoLeitor(cbPorts.getSelectedItem().toString());

        if(((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)).tipoDoProduto == LeitorMarsOne.TipoProduto.EMPILHADEIRA){
            adicionarAbaDeEmpilhadeira(((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)).nomeDoArquivo,novoLeitor); 
            tbpanemodelo.setVisible(true); 
        }
        
        JOptionPane.showMessageDialog(null, "Parâmetros gravados com sucesso", "Aviso!",JOptionPane.INFORMATION_MESSAGE);
        fecharConexaoSerial();
    }//GEN-LAST:event_btnGravarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        fecharConexaoSerial();
    }//GEN-LAST:event_formWindowClosing

    private void menuSalvarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalvarComoActionPerformed
        // TODO add your handling code here:
        int posicao = 0;
        
            for(int i=0;i<equipamentosAbertos.size();i++){
                if(tbpanemodelo.indexOfTab(((LeitorMarsOne)equipamentosAbertos.get(i)).nomeDoArquivo) >= 0){
                    posicao = tbpanemodelo.indexOfTab(((LeitorMarsOne)equipamentosAbertos.get(i)).nomeDoArquivo);
                }
            } 
        
            LeitorMarsOne leitorParaSalvar = (LeitorMarsOne)equipamentosAbertos.get(tbpanemodelo.indexOfTab(((LeitorMarsOne)equipamentosAbertos.get(posicao)).nomeDoArquivo));             
            
            try{
                salvarArquivo(leitorParaSalvar);
            }
            catch(Exception ex){
                
            }
    }//GEN-LAST:event_menuSalvarComoActionPerformed

    private void menuSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalvarActionPerformed
        // TODO add your handling code here:
        salvar();
    }//GEN-LAST:event_menuSalvarActionPerformed

    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
        // TODO add your handling code here:
        abrirArquivo();
        
        if(((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)).tipoDoProduto == LeitorMarsOne.TipoProduto.EMPILHADEIRA){
            adicionarAbaDeEmpilhadeira(((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)).nomeDoArquivo,((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1))); 
            tbpanemodelo.setVisible(true); 
        }
    }//GEN-LAST:event_menuAbrirActionPerformed

    private void btnLerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLerActionPerformed
        // TODO add your handling code here:]
        LeitorMarsOne novoLeitor;
        novoLeitor = lerParametrosDoLeitor(cbPorts.getSelectedItem().toString());

        salvarArquivo(novoLeitor);

        if(((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)).tipoDoProduto == LeitorMarsOne.TipoProduto.EMPILHADEIRA){
            adicionarAbaDeEmpilhadeira(((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)).nomeDoArquivo,((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)));
            tbpanemodelo.setVisible(true);
        }
        fecharConexaoSerial();
    }//GEN-LAST:event_btnLerActionPerformed

    private void btnCalibracaoAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalibracaoAutoActionPerformed
        // TODO add your handling code here:
        realizarCalibracaoAutomatica();
        fecharConexaoSerial();
    }//GEN-LAST:event_btnCalibracaoAutoActionPerformed

    private void txtfRssiMinAnt1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtfRssiMinAnt1InputMethodTextChanged
        // TODO add your handling code here:
        try{
            txtfRssiMinAnt1.commitEdit();
        }
        catch(Exception ex){
            
        }
    }//GEN-LAST:event_txtfRssiMinAnt1InputMethodTextChanged

    private void txtfRssiMinAnt2InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtfRssiMinAnt2InputMethodTextChanged
        // TODO add your handling code here:
        try{
            txtfRssiMinAnt2.commitEdit();
        }
        catch(Exception ex){
            
        }
    }//GEN-LAST:event_txtfRssiMinAnt2InputMethodTextChanged

    private void txtfRssiMinAnt3InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtfRssiMinAnt3InputMethodTextChanged
        // TODO add your handling code here:
        try{
            txtfRssiMinAnt3.commitEdit();
        }
        catch(Exception ex){
            
        }
    }//GEN-LAST:event_txtfRssiMinAnt3InputMethodTextChanged

    private void txtfRssiMinAnt4InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtfRssiMinAnt4InputMethodTextChanged
        // TODO add your handling code here:
        try{
            txtfRssiMinAnt4.commitEdit();
        }
        catch(Exception ex){
            
        }
    }//GEN-LAST:event_txtfRssiMinAnt4InputMethodTextChanged

    static Sobre sobre;
    
    // BLOCO EXIBIDO NO FRAME SOBRE
    static String empresa;
    static String autor;
    static String versao;
    static String revisao;
    static String dataUltimaAlteracao;
    /////////////////////////////////////////
    
    ArrayList equipamentosAbertos = new ArrayList<LeitorMarsOne>();
            
    SerialPort conexaoCOM;
    ObservableList<String> portList;
    String perfilSelecionado;
    LeitorMarsOne.TipoProduto tipoDoProduto;
    
    public void salvar(){
        int posicao = 0;
        
            for(int i=0;i<equipamentosAbertos.size();i++){
                if(tbpanemodelo.indexOfTab(((LeitorMarsOne)equipamentosAbertos.get(i)).nomeDoArquivo) >= 0){
                    posicao = tbpanemodelo.indexOfTab(((LeitorMarsOne)equipamentosAbertos.get(i)).nomeDoArquivo);
                }
            }     
        
        try{
        
            LeitorMarsOne leitorParaSalvar = (LeitorMarsOne)equipamentosAbertos.get(tbpanemodelo.indexOfTab(((LeitorMarsOne)equipamentosAbertos.get(posicao)).nomeDoArquivo));       
            
            leitorParaSalvar.idDoLeitor = txtfIdEmpilhadeira.getText();
            leitorParaSalvar.ssidWifi = txtfSsidWifi.getText();
            leitorParaSalvar.senhaWifi = String.copyValueOf(txtfSenhaWifi.getPassword());
            leitorParaSalvar.ipRemotoPrincipal = txtfIpPrincipal.getText();
            leitorParaSalvar.portaRemotaPrincipal = txtfPortaPrincipal.getText();
            leitorParaSalvar.ipRemotoSecundario = txtfIpBackup.getText();
            leitorParaSalvar.portaRemotaSecundaria = txtfPortaBackup.getText();
            leitorParaSalvar.antena1 = new Antena(1,0,0,0,0);
            //leitorParaSalvar.antena1.setFrequencia(Integer.parseInt(txtfFrequenciaDeOperacao.getText()));
            leitorParaSalvar.antena1.setAjuste(Integer.parseInt(txtfCinAnt1.getText()),Integer.parseInt(txtfClenAnt1.getText()),Integer.parseInt(txtfCoutAnt1.getText()));
            txtfRssiMinAnt1.commitEdit();
            leitorParaSalvar.antena1.setSensibilidade((Integer)txtfRssiMinAnt1.getValue());
            leitorParaSalvar.antena2 = new Antena(2,0,0,0,0);
            //leitorParaSalvar.antena2.setFrequencia(Integer.parseInt(txtfFrequenciaAnt2.getText()));
            leitorParaSalvar.antena2.setAjuste(Integer.parseInt(txtfCinAnt2.getText()),Integer.parseInt(txtfClenAnt2.getText()),Integer.parseInt(txtfCoutAnt2.getText()));
            txtfRssiMinAnt2.commitEdit();
            leitorParaSalvar.antena2.setSensibilidade((Integer)txtfRssiMinAnt2.getValue());
            leitorParaSalvar.antena3 = new Antena(2,0,0,0,0);
            //leitorParaSalvar.antena3.setFrequencia(Integer.parseInt(txtfFrequenciaAnt3.getText()));
            leitorParaSalvar.antena3.setAjuste(Integer.parseInt(txtfCinAnt3.getText()),Integer.parseInt(txtfClenAnt3.getText()),Integer.parseInt(txtfCoutAnt3.getText()));
            txtfRssiMinAnt3.commitEdit();
            leitorParaSalvar.antena3.setSensibilidade((Integer)txtfRssiMinAnt3.getValue());
            leitorParaSalvar.antena4 = new Antena(4,0,0,0,0);
            //leitorParaSalvar.antena4.setFrequencia(Integer.parseInt(txtfFrequenciaAnt4.getText()));
            leitorParaSalvar.antena4.setAjuste(Integer.parseInt(txtfCinAnt4.getText()),Integer.parseInt(txtfClenAnt4.getText()),Integer.parseInt(txtfCoutAnt4.getText()));
            txtfRssiMinAnt4.commitEdit();
            leitorParaSalvar.antena4.setSensibilidade((Integer)txtfRssiMinAnt4.getValue());
            leitorParaSalvar.frequenciaDeOperacao = Integer.parseInt(txtfFrequenciaDeOperacao.getText());
            
            leitorParaSalvar.antena1.setReflexao(Integer.parseInt(txtfReflexaoAnt1.getText()));
            leitorParaSalvar.antena2.setReflexao(Integer.parseInt(txtfReflexaoAnt2.getText()));
            leitorParaSalvar.antena3.setReflexao(Integer.parseInt(txtfReflexaoAnt3.getText()));
            leitorParaSalvar.antena4.setReflexao(Integer.parseInt(txtfReflexaoAnt4.getText()));
            
            equipamentosAbertos.clear();
            equipamentosAbertos.add(leitorParaSalvar);
            
            for(int i=0;i<equipamentosAbertos.size();i++){               
                switch(leitorParaSalvar.tipoDoProduto){
                    case EMPILHADEIRA:
                            salvarEmpilhadeira(leitorParaSalvar);
                        break;
                    case PORTAL:
                        break;
                }
            }       
        }
        catch(Exception ex){
            System.out.printf(ex.getMessage());
        }    
    }
    
    public void atualizarPortasCom(){
        cbPorts.removeAllItems();
        detectPort();
        for(int i=0;i<portList.size();i++){
            cbPorts.addItem(portList.get(i));
        }
    }
    
    public boolean iniciarPortaSerial(String port){
        boolean success = false;
        if(conexaoCOM != null){
           if (conexaoCOM.isOpened()){
                fecharConexaoSerial();
            } 
        }
        SerialPort serialPort = new SerialPort(port);
        try {
            serialPort.openPort();
            serialPort.setParams(
                    //SerialPort.BAUDRATE_9600,
                    SerialPort.BAUDRATE_115200,
                    SerialPort.DATABITS_8,
                    SerialPort.STOPBITS_1,
                    SerialPort.PARITY_NONE);
            serialPort.setEventsMask(MASK_RXCHAR);
            serialPort.addEventListener((SerialPortEvent serialPortEvent) -> {
                /*
                String bufferRecebimentoCOM = new String();
                if(serialPortEvent.isRXCHAR()){
                    try {
                        bufferRecebimentoCOM = serialPort.readString(serialPortEvent
                                .getEventValue());
                        
                        if(strstr(bufferRecebimentoCOM,"FIM\r\n")>0){
                            System.out.printf(bufferRecebimentoCOM);
                        }
                        //Update label in ui thread
                        Platform.runLater(() -> {
                            //labelValue.setText(st);
                            
                        });
                        
                    } catch (SerialPortException ex) {
                        
                    }
                    int i=0;
                }
                */
            });            
            conexaoCOM = serialPort;                     
            success = true;
        } catch (SerialPortException ex) {
            /*
            Logger.getLogger(JavaFX_jssc_Uno.class.getName())
                    .log(Level.SEVERE, null, ex);
            */
            System.out.println("SerialPortException: " + ex.toString());
        }
        return true;
    }
    
    public void realizarCalibracaoAutomatica(){
        iniciarPortaSerial(cbPorts.getSelectedItem().toString());
        
        String comando = new String();
        
        comando = String.format("#CMD26;0\r\n");
        
        try{                         
            conexaoCOM.writeString(comando);
            
            Thread.sleep(3000);
            
            LeitorMarsOne novoLeitor=null;
            novoLeitor = lerParametrosDoLeitor(cbPorts.getSelectedItem().toString());

            if(((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)).tipoDoProduto == LeitorMarsOne.TipoProduto.EMPILHADEIRA){
                adicionarAbaDeEmpilhadeira(((LeitorMarsOne)equipamentosAbertos.get(equipamentosAbertos.size()-1)).nomeDoArquivo,novoLeitor); 
                tbpanemodelo.setVisible(true); 
            }
            
            salvar();

            JOptionPane.showMessageDialog(null, "Calibração realizada com sucesso!", "Aviso!",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro!",JOptionPane.ERROR_MESSAGE);
        }
    }
        
    public void gravarParametrosNoLeitor(LeitorMarsOne leitor,String port){
        String bufferRecebimentoCOM;
        String parametrosLeitor[];
        
        iniciarPortaSerial(port);
        String ajusteCapacitores[];
        
        String ip[];
        
        int delay = 300;
        
        AjusteCapacitores ajuste = new AjusteCapacitores();
          
        try{
            String mensagem;
            
            //CRIO AS 4 ULTIMAS ANTENAS POIS NÃO USAMOS
            leitor.antena5 = new Antena(5,0,0,0,0);
            leitor.antena6 = new Antena(6,0,0,0,0);
            leitor.antena7 = new Antena(7,0,0,0,0);
            leitor.antena8 = new Antena(8,0,0,0,0);
            
            //PROTEGER PARAMETROS MINIMOS E MAXIMOS DO LEITOR
            leitor.modoDeOperacao = (leitor.modoDeOperacao >= 1 && leitor.modoDeOperacao <=3) ? leitor.modoDeOperacao : 1;
            leitor.atrasoParaDegradarLeitura = (leitor.atrasoParaDegradarLeitura >= 0 && leitor.atrasoParaDegradarLeitura <= 100) ? leitor.atrasoParaDegradarLeitura : 0;
            leitor.repeticaoNaLeitura = (leitor.repeticaoNaLeitura >= 0 && leitor.repeticaoNaLeitura <= 100) ? leitor.repeticaoNaLeitura : 0;
            leitor.sensibilidadeDaAntena = (leitor.sensibilidadeDaAntena >=0 && leitor.sensibilidadeDaAntena <= 125) ? leitor.sensibilidadeDaAntena : 125;
            leitor.tempoParaInatividadeDaTagMonitorada = (leitor.tempoParaInatividadeDaTagMonitorada >= 0 && leitor.tempoParaInatividadeDaTagMonitorada <= 100) ? leitor.tempoParaInatividadeDaTagMonitorada : 0;
            leitor.numeroDeAntenasLidas = (leitor.numeroDeAntenasLidas >= 1 && leitor.numeroDeAntenasLidas <= 8) ? leitor.numeroDeAntenasLidas : 4;
            
            mensagem = String.format("#CMD01;%03d\r\n",leitor.modoDeOperacao);           
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD02;%03d\r\n",leitor.atrasoParaDegradarLeitura);           
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD03;%03d\r\n",leitor.repeticaoNaLeitura);           
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD04;%03d\r\n",leitor.sensibilidadeDaAntena);           
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD05;%03d\r\n",leitor.tempoParaInatividadeDaTagMonitorada);           
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD06;%03d\r\n",leitor.numeroDeAntenasLidas);             
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD07;%03d;%03d;%03d\r\n",leitor.antena1.getCin(),leitor.antena1.getClen(),leitor.antena1.getCout());            
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD08;%03d;%03d;%03d\r\n",leitor.antena2.getCin(),leitor.antena2.getClen(),leitor.antena2.getCout());            
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD09;%03d;%03d;%03d\r\n",leitor.antena3.getCin(),leitor.antena3.getClen(),leitor.antena3.getCout());            
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD10;%03d;%03d;%03d\r\n",leitor.antena4.getCin(),leitor.antena4.getClen(),leitor.antena4.getCout());        
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD11;%03d;%03d;%03d\r\n",leitor.antena5.getCin(),leitor.antena5.getClen(),leitor.antena5.getCout()); 
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD12;%03d;%03d;%03d\r\n",leitor.antena6.getCin(),leitor.antena6.getClen(),leitor.antena6.getCout());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD13;%03d;%03d;%03d\r\n",leitor.antena7.getCin(),leitor.antena7.getClen(),leitor.antena7.getCout());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD14;%03d;%03d;%03d\r\n",leitor.antena8.getCin(),leitor.antena8.getClen(),leitor.antena8.getCout());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD15;%03d\r\n",leitor.frequenciaDeOperacao-900);       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD16;%s\r\n",leitor.idDoLeitor);       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            /*
            mensagem = String.format("#CMD17;%03d\r\n",leitor.dataHora);       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            */
            
            
            
            ip = leitor.ipRemotoPrincipal.split("\\.");
            
            for(int i=0;i<ip.length;i++){
                if(ip[i].length()<3){
                    ip[i] = "0".concat(ip[i]);
                        i--;                    
                }
            }
            
            mensagem = String.format("#CMD18;%s.%s.%s.%s\r\n",ip[0],ip[1],ip[2],ip[3]);      
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            ip = leitor.ipRemotoSecundario.split("\\.");
            for(int i=0;i<ip.length;i++){
                if(ip[i].length()<3){
                    ip[i] = "0".concat(ip[i]);
                    i--;                    
                }
            }            
            
            mensagem = String.format("#CMD19;%s.%s.%s.%s\r\n",ip[0],ip[1],ip[2],ip[3]);       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();                       
                        
            String porta = leitor.portaRemotaPrincipal;
            
            for(int i=0;i<(5-porta.length());i++){               
                porta = "0".concat(porta);                   
            }
            
            mensagem = String.format("#CMD20;%s\r\n",porta);       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            porta = leitor.portaRemotaSecundaria;
            
            for(int i=0;i<(5-porta.length());i++){               
                porta = "0".concat(porta);                   
            }
            
            mensagem = String.format("#CMD21;%s\r\n",porta);       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            char ssidWifi[] =  leitor.ssidWifi.toCharArray();
              
            byte comandoWifi[] = new byte[25];          
           
            comandoWifi[0] = '#';
            comandoWifi[1] = 'C';
            comandoWifi[2] = 'M';
            comandoWifi[3] = 'D';
            comandoWifi[4] = '2';
            comandoWifi[5] = '2';
            comandoWifi[6] = ';';
            
            comandoWifi[23] = '\r';
            comandoWifi[24] = '\n';
            
            for(int i=0;i<ssidWifi.length;i++){                
                comandoWifi[i+7] = (byte)ssidWifi[i];                
            }
            
            //mensagem = String.format("#CMD22;%s\r\n",leitor.ssidWifi);       
            //conexaoCOM.writeString(mensagem);
            conexaoCOM.writeBytes(comandoWifi);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            char senhaWifi[] =  leitor.senhaWifi.toCharArray();
            
            comandoWifi = new byte[25];
            
            //comandoWifi[] = new byte[25];
           
            comandoWifi[0] = '#';
            comandoWifi[1] = 'C';
            comandoWifi[2] = 'M';
            comandoWifi[3] = 'D';
            comandoWifi[4] = '2';
            comandoWifi[5] = '3';
            comandoWifi[6] = ';';
            
            comandoWifi[23] = '\r';
            comandoWifi[24] = '\n';
            
            for(int i=0;i<senhaWifi.length;i++){
                comandoWifi[i+7] = (byte)senhaWifi[i];
            }
            String view = comandoWifi.toString();
            conexaoCOM.writeBytes(comandoWifi);
            //conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD27;%03d\r\n",leitor.antena1.getSensibilidade());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD28;%03d\r\n",leitor.antena2.getSensibilidade());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD29;%03d\r\n",leitor.antena3.getSensibilidade());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD30;%03d\r\n",leitor.antena4.getSensibilidade());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD31;%03d\r\n",leitor.antena5.getSensibilidade());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD32;%03d\r\n",leitor.antena6.getSensibilidade());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD33;%03d\r\n",leitor.antena7.getSensibilidade());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            mensagem = String.format("#CMD34;%03d\r\n",leitor.antena8.getSensibilidade());       
            conexaoCOM.writeString(mensagem);
            Thread.sleep(delay);            
            bufferRecebimentoCOM = conexaoCOM.readString();
            
        }
        catch(Exception ex){
            System.out.printf(ex.getMessage());
        }
    }
    
    public LeitorMarsOne lerParametrosDoLeitor(String port){
        String bufferRecebimentoCOM;
        String parametrosLeitor[];
        
        iniciarPortaSerial(port);
        String ajusteCapacitores[];
        
        LeitorMarsOne leitor = new LeitorMarsOne();           
        AjusteCapacitores ajuste = new AjusteCapacitores();
                
        //System.out.println("lerParametrosDoLeitor");
        
        try{
            conexaoCOM.writeString("#CMD25?\r\n"); 
            Thread.sleep(1000);
            bufferRecebimentoCOM = conexaoCOM.readString();
            
            bufferRecebimentoCOM = bufferRecebimentoCOM.replace(" ",""); //Remove espaços            
            parametrosLeitor = bufferRecebimentoCOM.split("\r\n");                                   

            for(int i=0;i<parametrosLeitor.length;i++){
                parametrosLeitor[i] = parametrosLeitor[i].substring(parametrosLeitor[i].indexOf(':')+1); //Elimina tudo antes dos : e retorna apenas o valor do parametro
            }              
            
            leitor.modoDeOperacao = Integer.parseInt(parametrosLeitor[1]);
            leitor.atrasoParaDegradarLeitura = Integer.parseInt(parametrosLeitor[2]);
            leitor.repeticaoNaLeitura = Integer.parseInt(parametrosLeitor[3]);
            leitor.sensibilidadeDaAntena = Integer.parseInt(parametrosLeitor[4]);
            leitor.tempoParaInatividadeDaTagMonitorada = Integer.parseInt(parametrosLeitor[5]);
            leitor.numeroDeAntenasLidas = Integer.parseInt(parametrosLeitor[6]);
            ajusteCapacitores = parametrosLeitor[7].split(",");
            ajuste.setCin(Integer.parseInt(ajusteCapacitores[0]));
            ajuste.setClen(Integer.parseInt(ajusteCapacitores[1]));
            ajuste.setCout(Integer.parseInt(ajusteCapacitores[2]));            
            leitor.antena1 = new Antena(1,ajuste,125);
            leitor.antena1.setReflexao(Integer.parseInt(ajusteCapacitores[3]));
            ajusteCapacitores = parametrosLeitor[8].split(",");
            ajuste.setCin(Integer.parseInt(ajusteCapacitores[0]));
            ajuste.setClen(Integer.parseInt(ajusteCapacitores[1]));
            ajuste.setCout(Integer.parseInt(ajusteCapacitores[2]));
            leitor.antena2 = new Antena(2,ajuste,125);
            leitor.antena2.setReflexao(Integer.parseInt(ajusteCapacitores[3]));
            ajusteCapacitores = parametrosLeitor[9].split(",");
            ajuste.setCin(Integer.parseInt(ajusteCapacitores[0]));
            ajuste.setClen(Integer.parseInt(ajusteCapacitores[1]));
            ajuste.setCout(Integer.parseInt(ajusteCapacitores[2]));
            leitor.antena3 = new Antena(3,ajuste,125);
            leitor.antena3.setReflexao(Integer.parseInt(ajusteCapacitores[3]));
            ajusteCapacitores = parametrosLeitor[10].split(",");
            ajuste.setCin(Integer.parseInt(ajusteCapacitores[0]));
            ajuste.setClen(Integer.parseInt(ajusteCapacitores[1]));
            ajuste.setCout(Integer.parseInt(ajusteCapacitores[2]));
            leitor.antena4 = new Antena(4,ajuste,125);
            leitor.antena4.setReflexao(Integer.parseInt(ajusteCapacitores[3]));
            ajusteCapacitores = parametrosLeitor[11].split(",");
            ajuste.setCin(Integer.parseInt(ajusteCapacitores[0]));
            ajuste.setClen(Integer.parseInt(ajusteCapacitores[1]));
            ajuste.setCout(Integer.parseInt(ajusteCapacitores[2]));
            leitor.antena5 = new Antena(5,ajuste,125);
            leitor.antena5.setReflexao(Integer.parseInt(ajusteCapacitores[3]));
            ajusteCapacitores = parametrosLeitor[12].split(",");
            ajuste.setCin(Integer.parseInt(ajusteCapacitores[0]));
            ajuste.setClen(Integer.parseInt(ajusteCapacitores[1]));
            ajuste.setCout(Integer.parseInt(ajusteCapacitores[2]));
            leitor.antena6 = new Antena(6,ajuste,125);
            leitor.antena6.setReflexao(Integer.parseInt(ajusteCapacitores[3]));
            ajusteCapacitores = parametrosLeitor[13].split(",");
            ajuste.setCin(Integer.parseInt(ajusteCapacitores[0]));
            ajuste.setClen(Integer.parseInt(ajusteCapacitores[1]));
            ajuste.setCout(Integer.parseInt(ajusteCapacitores[2]));
            leitor.antena7 = new Antena(7,ajuste,125);
            leitor.antena7.setReflexao(Integer.parseInt(ajusteCapacitores[3]));
            ajusteCapacitores = parametrosLeitor[14].split(",");
            ajuste.setCin(Integer.parseInt(ajusteCapacitores[0]));
            ajuste.setClen(Integer.parseInt(ajusteCapacitores[1]));
            ajuste.setCout(Integer.parseInt(ajusteCapacitores[2]));
            leitor.antena8 = new Antena(8,ajuste,125);
            leitor.antena8.setReflexao(Integer.parseInt(ajusteCapacitores[3]));
            leitor.frequenciaDeOperacao = Integer.parseInt(parametrosLeitor[15])+900;
            leitor.idDoLeitor = parametrosLeitor[16];
            leitor.ipRemotoPrincipal = parametrosLeitor[17];
            leitor.ipRemotoSecundario = parametrosLeitor[18];
            leitor.portaRemotaPrincipal = parametrosLeitor[19];
            leitor.portaRemotaSecundaria = parametrosLeitor[20];
            leitor.ssidWifi = parametrosLeitor[21];
            leitor.senhaWifi = parametrosLeitor[22];
            leitor.antena1.setSensibilidade(Integer.parseInt(parametrosLeitor[23]));
            leitor.antena2.setSensibilidade(Integer.parseInt(parametrosLeitor[24]));
            leitor.antena3.setSensibilidade(Integer.parseInt(parametrosLeitor[25]));
            leitor.antena4.setSensibilidade(Integer.parseInt(parametrosLeitor[26]));
            leitor.antena5.setSensibilidade(Integer.parseInt(parametrosLeitor[27]));
            leitor.antena6.setSensibilidade(Integer.parseInt(parametrosLeitor[28]));
            leitor.antena7.setSensibilidade(Integer.parseInt(parametrosLeitor[29]));
            leitor.antena8.setSensibilidade(Integer.parseInt(parametrosLeitor[30]));
            leitor.firmware = parametrosLeitor[31];                              
            
            if(leitor.firmware.contains("FWEMP")){
                leitor.tipoDoProduto = LeitorMarsOne.TipoProduto.EMPILHADEIRA;                
            }
            else{
                leitor.tipoDoProduto = LeitorMarsOne.TipoProduto.PORTAL;
            }            
        }
        catch(Exception ex){
            System.out.printf(ex.getMessage());
        }
        return leitor;
    }
    
    public String encriptar(String dado){
        char chararray[] = dado.toCharArray();
        for(int i=0;i<chararray.length;i++){            
            chararray[i] -= 0x01;                   
        }        
        return String.copyValueOf(chararray);
    }
    
    public String decriptar(String dado){
        char chararray[] = dado.toCharArray();
        for(int i=0;i<chararray.length;i++){
             chararray[i] += 0x01;
        }
        return String.copyValueOf(chararray);
    }
    
    public void fecharConexaoSerial(){
        
        System.out.println("desconexão()");
        if(conexaoCOM != null){
            try {
                conexaoCOM.removeEventListener();
                
                if(conexaoCOM.isOpened()){
                    conexaoCOM.closePort();
                }
                
            } catch (SerialPortException ex) {
                /*
                Logger.getLogger(JavaFX_jssc_Uno.class.getName())
                        .log(Level.SEVERE, null, ex);
                */
            }
        }
    }
         
    private void detectPort(){
         
        portList = FXCollections.observableArrayList();
 
        String[] serialPortNames = SerialPortList.getPortNames();
        for(String name: serialPortNames){
            //System.out.println(name);
            portList.add(name);
        }
    }
    
    public void adicionarAbaDeEmpilhadeira(String nomeAba, LeitorMarsOne empilhadeira){
      
        javax.swing.JTabbedPane novaAbaDeEmpilhadeira = new javax.swing.JTabbedPane();
        
        novaAbaDeEmpilhadeira = tbpaneEmpilhadeira;
        
        // GERAL
        txtfFrequenciaDeOperacao.setText(String.valueOf(empilhadeira.frequenciaDeOperacao));
        txtfIdEmpilhadeira.setText(empilhadeira.idDoLeitor);
        txtfSsidWifi.setText(empilhadeira.ssidWifi);
        txtfSenhaWifi.setText(empilhadeira.senhaWifi);
        txtfIpPrincipal.setText(empilhadeira.ipRemotoPrincipal);
        txtfIpBackup.setText(empilhadeira.ipRemotoSecundario);
        txtfPortaPrincipal.setText(empilhadeira.portaRemotaPrincipal);
        txtfPortaBackup.setText(empilhadeira.portaRemotaSecundaria);
        
        // ANTENAS
        //txtfFrequenciaDeOperacao.setText(String.valueOf(empilhadeira.antena1.getFrequencia()));
        txtfRssiMinAnt1.setValue(empilhadeira.antena1.getSensibilidade());
        txtfCinAnt1.setText(String.valueOf(empilhadeira.antena1.getCin()));
        txtfClenAnt1.setText(String.valueOf(empilhadeira.antena1.getClen()));
        txtfCoutAnt1.setText(String.valueOf(empilhadeira.antena1.getCout()));
        txtfReflexaoAnt1.setText(String.valueOf(empilhadeira.antena1.getReflexao())); 
        
        //txtfFrequenciaAnt2.setText(String.valueOf(empilhadeira.antena2.getFrequencia()));
        txtfRssiMinAnt2.setValue(empilhadeira.antena1.getSensibilidade());
        txtfCinAnt2.setText(String.valueOf(empilhadeira.antena2.getCin()));
        txtfClenAnt2.setText(String.valueOf(empilhadeira.antena2.getClen()));
        txtfCoutAnt2.setText(String.valueOf(empilhadeira.antena2.getCout()));
        txtfReflexaoAnt2.setText(String.valueOf(empilhadeira.antena2.getReflexao())); 
        
        //txtfFrequenciaAnt3.setText(String.valueOf(empilhadeira.antena3.getFrequencia()));
        txtfRssiMinAnt3.setValue(empilhadeira.antena3.getSensibilidade());
        txtfCinAnt3.setText(String.valueOf(empilhadeira.antena3.getCin()));
        txtfClenAnt3.setText(String.valueOf(empilhadeira.antena3.getClen()));
        txtfCoutAnt3.setText(String.valueOf(empilhadeira.antena3.getCout()));
        txtfReflexaoAnt3.setText(String.valueOf(empilhadeira.antena3.getReflexao())); 
        
        //txtfFrequenciaAnt4.setText(String.valueOf(empilhadeira.antena4.getFrequencia()));
        txtfRssiMinAnt4.setValue(empilhadeira.antena4.getSensibilidade());
        txtfCinAnt4.setText(String.valueOf(empilhadeira.antena4.getCin()));
        txtfClenAnt4.setText(String.valueOf(empilhadeira.antena4.getClen()));
        txtfCoutAnt4.setText(String.valueOf(empilhadeira.antena4.getCout()));
        txtfReflexaoAnt4.setText(String.valueOf(empilhadeira.antena4.getReflexao())); 
        
        tbpanemodelo.addTab(nomeAba, novaAbaDeEmpilhadeira);
    }

    public static int strstr(String X, String Y){
            // if X is null or if X's length is less than that of Y's
            if (X == null || Y.length() > X.length()) {
                    return -1;
            }

            // if Y is null or is empty
            if (Y == null || Y.length() == 0) {
                    return 0;
            }

            for (int i = 0; i <= X.length() - Y.length(); i++)
            {
                    int j;
                    for (j = 0; j < Y.length(); j++) {
                            if (Y.charAt(j) != X.charAt(i + j)) {
                                    break;
                            }
                    }

                    if (j == Y.length()) {
                            return i;
                    }
            }

            return -1;
    }
    
    public LeitorMarsOne abrirArquivo(){
        String caminhoDoArquivo;
        
        LeitorMarsOne leitorCarregado = new LeitorMarsOne();
        
        JFrame parentFrame = new JFrame();
        
        File fileToOpen;
        Scanner reader = null;
        JFileChooser fileChooser = new JFileChooser();
        
        fileChooser.setDialogTitle("Escolha o arquivo de configuração desejado"); 
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CPS files","cps");
        fileChooser.setFileFilter(filter);
        
        int userSelection = fileChooser.showOpenDialog(parentFrame);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            fileToOpen = fileChooser.getSelectedFile();             
            try{
                reader = new Scanner(fileToOpen);
                while(reader.hasNextLine()){
                    String data = reader.nextLine();
                    //System.out.printf(data);
                    String parametros[] = data.split(";");
                    leitorCarregado.nomeDoArquivo = fileToOpen.getName();
                    leitorCarregado.caminhoDoArquivo = fileToOpen.getAbsolutePath();
                    leitorCarregado.tipoDoProduto = parametros[0].compareTo("EMPILHADEIRA")==0 ? LeitorMarsOne.TipoProduto.EMPILHADEIRA:LeitorMarsOne.TipoProduto.PORTAL;
                    leitorCarregado.firmware = parametros[1];
                    
                    leitorCarregado.antena1 = new Antena(Integer.parseInt(parametros[2]),Integer.parseInt(parametros[3]),Integer.parseInt(parametros[4]),
                                                         Integer.parseInt(parametros[5]),Integer.parseInt(parametros[6]),Integer.parseInt(parametros[7]));
                    leitorCarregado.antena2 = new Antena(Integer.parseInt(parametros[8]),Integer.parseInt(parametros[9]),Integer.parseInt(parametros[10]),
                                                         Integer.parseInt(parametros[11]),Integer.parseInt(parametros[12]),Integer.parseInt(parametros[13]));
                    leitorCarregado.antena3 = new Antena(Integer.parseInt(parametros[14]),Integer.parseInt(parametros[15]),Integer.parseInt(parametros[16]),
                                                         Integer.parseInt(parametros[17]),Integer.parseInt(parametros[18]),Integer.parseInt(parametros[19]));
                    leitorCarregado.antena4 = new Antena(Integer.parseInt(parametros[20]),Integer.parseInt(parametros[21]),Integer.parseInt(parametros[22]),
                                                         Integer.parseInt(parametros[23]),Integer.parseInt(parametros[24]),Integer.parseInt(parametros[25]));
                    
                    leitorCarregado.idDoLeitor = parametros[26];
                    leitorCarregado.ipRemotoPrincipal = parametros[27];
                    leitorCarregado.ipRemotoSecundario = parametros[28];
                    leitorCarregado.portaRemotaPrincipal = parametros[29];
                    leitorCarregado.portaRemotaSecundaria = parametros[30];
                    leitorCarregado.ssidWifi = parametros[31];
                    leitorCarregado.senhaWifi = decriptar(parametros[32]);
                    leitorCarregado.frequenciaDeOperacao = Integer.parseInt(parametros[33]);
                    
                    leitorCarregado.antena1.setReflexao(Integer.parseInt(parametros[34]));
                    leitorCarregado.antena2.setReflexao(Integer.parseInt(parametros[35]));
                    leitorCarregado.antena3.setReflexao(Integer.parseInt(parametros[36]));
                    leitorCarregado.antena4.setReflexao(Integer.parseInt(parametros[37]));
                    
                    equipamentosAbertos.clear();
                    equipamentosAbertos.add(leitorCarregado);
                    adicionarAbaDeEmpilhadeira(leitorCarregado.nomeDoArquivo,leitorCarregado);
                }
            }
            catch(Exception ex){
                
            }
            finally{
                reader.close();
            }
            
        }
        return leitorCarregado;
    }
    
    public void salvarArquivo(LeitorMarsOne leitor){
        boolean criarArquivo = false;
        String caminhoDoArquivo;
        
        JFrame parentFrame = new JFrame();
        
        File fileToSave;
        
        JFileChooser fileChooser = new JFileChooser();
        
        fileChooser.setDialogTitle("Escolha o diretório e o nome do arquivo");   
        fileChooser.setSelectedFile(new File("novoSetup.cps"));
        
        int userSelection = fileChooser.showSaveDialog(parentFrame);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            fileToSave = fileChooser.getSelectedFile();
            
            if(strstr(fileToSave.getName(),".cps")>0){
                caminhoDoArquivo = fileToSave.getAbsolutePath();
            }
            else{
                File newFile = new File(fileToSave.getAbsolutePath()+".cps");
                fileToSave = newFile;
                caminhoDoArquivo = fileToSave.getAbsolutePath();
            }
            
            try{
                if(!fileToSave.exists()){
                    criarArquivo = true;
                }
                else{
                    throw new IOException("Arquivo já existe. Deseja sobrescrevê-lo?");
                }
            }
            catch(IOException ex){
                int dialogOption = JOptionPane.NO_OPTION;
                
                dialogOption = JOptionPane.showConfirmDialog(null,ex.getMessage(),"AVISO",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
                
                if(dialogOption == JOptionPane.YES_OPTION) {   
                    criarArquivo = true;                    
                }
                else{
                    if(dialogOption == JOptionPane.NO_OPTION) {
                        
                    }
                }                 
            }   
            
            if(criarArquivo){
                leitor.nomeDoArquivo = fileToSave.getName();
                leitor.caminhoDoArquivo = caminhoDoArquivo;
                
                try{  
                    switch(leitor.tipoDoProduto){
                        case EMPILHADEIRA:                                                       
                            salvarEmpilhadeira(leitor);
                            break;
                        case PORTAL:
                            break;
                    }
                    //adicionarAbaDeEmpilhadeira(fileToSave.getName(),leitor); 
                    //tbpanemodelo.setVisible(true); 
                    equipamentosAbertos.add(leitor);
                }  
                catch(IOException ex2){
                    JOptionPane.showMessageDialog(null,ex2.getMessage(),"Erro ao salvar o arquivo",JOptionPane.ERROR_MESSAGE);
                }                
            }
        }   
    }
    
    public void salvarEmpilhadeira(LeitorMarsOne empilhadeira) throws IOException{
        
        File fileToSave = new File(empilhadeira.caminhoDoArquivo);
        
        FileWriter escritor = new FileWriter(empilhadeira.caminhoDoArquivo);
        try{
            fileToSave.createNewFile();
            if(fileToSave.canWrite()){
                escritor.write(empilhadeira.tipoDoProduto + ";" +
                               empilhadeira.firmware + ";" +
                        
                               empilhadeira.antena1.getCanal() + ";" +
                               empilhadeira.antena1.getFrequencia() + ";" +                               
                               empilhadeira.antena1.getCin() + ";" +
                               empilhadeira.antena1.getClen() + ";" +
                               empilhadeira.antena1.getCout() + ";" +    
                               empilhadeira.antena1.getSensibilidade() + ";" +
                               //empilhadeira.antena1.getReflexao() + ";" +
                               
                               empilhadeira.antena2.getCanal() + ";" +
                               empilhadeira.antena2.getFrequencia() + ";" +                               
                               empilhadeira.antena2.getCin() + ";" +
                               empilhadeira.antena2.getClen() + ";" +
                               empilhadeira.antena2.getCout() + ";" +   
                               empilhadeira.antena2.getSensibilidade() + ";" +
                               //empilhadeira.antena2.getReflexao() + ";" +
                        
                               empilhadeira.antena3.getCanal() + ";" +
                               empilhadeira.antena3.getFrequencia() + ";" +                               
                               empilhadeira.antena3.getCin() + ";" +
                               empilhadeira.antena3.getClen() + ";" +
                               empilhadeira.antena3.getCout() + ";" +   
                               empilhadeira.antena3.getSensibilidade() + ";" +
                               //empilhadeira.antena3.getReflexao() + ";" +
                        
                               empilhadeira.antena4.getCanal() + ";" +
                               empilhadeira.antena4.getFrequencia() + ";" +
                               empilhadeira.antena4.getCin() + ";" +
                               empilhadeira.antena4.getClen() + ";" +
                               empilhadeira.antena4.getCout() + ";" +
                               empilhadeira.antena4.getSensibilidade() + ";" +
                               //empilhadeira.antena4.getReflexao() + ";" +

                               empilhadeira.idDoLeitor + ";" +                               
                               empilhadeira.ipRemotoPrincipal + ";" +
                               empilhadeira.ipRemotoSecundario + ";" +
                               empilhadeira.portaRemotaPrincipal + ";" +
                               empilhadeira.portaRemotaSecundaria + ";" +
                               empilhadeira.ssidWifi + ";" +
                               encriptar(empilhadeira.senhaWifi) + ";" +
                               empilhadeira.frequenciaDeOperacao + ";" +
                        
                               empilhadeira.antena1.getReflexao() + ";" +
                               empilhadeira.antena2.getReflexao() + ";" +
                               empilhadeira.antena3.getReflexao() + ";" +
                               empilhadeira.antena4.getReflexao()
                               );
                escritor.close();
            }
        }        
        catch(IOException ex){
            throw ex;
        }
    }
  
    /**
     * @param args the command line arguments
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCalibracaoAuto;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnLer;
    private javax.swing.JComboBox<String> cbPorts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblDicaIdLeitor;
    private javax.swing.JLabel lblDicaIdLeitor1;
    private javax.swing.JLabel lblDicaIpBackup;
    private javax.swing.JLabel lblDicaIpPrincipal;
    private javax.swing.JLabel lblDicaPortaBackup;
    private javax.swing.JLabel lblDicaPortaPrincipal;
    private javax.swing.JLabel lblDicaSenhaWifi;
    private javax.swing.JLabel lblDicaSsidWifi;
    private javax.swing.JLabel lblIdEmpilhadeira;
    private javax.swing.JLabel lblIpBackup;
    private javax.swing.JLabel lblIpPrincipal;
    private javax.swing.JLabel lblParamGerais;
    private javax.swing.JLabel lblPortaBackup;
    private javax.swing.JLabel lblPortaPrincipal;
    private javax.swing.JLabel lblSenhaWifi;
    private javax.swing.JLabel lblServidorBackup;
    private javax.swing.JLabel lblServidorPrincipal;
    private javax.swing.JLabel lblSsidWifi;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenu menuNovo;
    private javax.swing.JMenuItem menuNovoArqConfigEmp;
    private javax.swing.JMenuItem menuNovoArqConfigPortal;
    private javax.swing.JMenu menuNovoArquivoConfig;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JMenuItem menuSalvar;
    private javax.swing.JMenuItem menuSalvarComo;
    private javax.swing.JMenuItem menuSobre;
    private javax.swing.JMenu menubarAjuda;
    private javax.swing.JMenu menubarArquivo;
    private javax.swing.JPanel panelAntena1;
    private javax.swing.JPanel panelAntena2;
    private javax.swing.JPanel panelAntena3;
    private javax.swing.JPanel panelAntena4;
    private javax.swing.JPanel panelAntenas;
    private javax.swing.JPanel panelGeral;
    private javax.swing.JSeparator separador1;
    private javax.swing.JSeparator separador2;
    private javax.swing.JTabbedPane tbpaneEmpilhadeira;
    private javax.swing.JTabbedPane tbpanemodelo;
    private javax.swing.JToolBar toolbarPrincipal;
    private javax.swing.JTextField txtfCinAnt1;
    private javax.swing.JTextField txtfCinAnt2;
    private javax.swing.JTextField txtfCinAnt3;
    private javax.swing.JTextField txtfCinAnt4;
    private javax.swing.JTextField txtfClenAnt1;
    private javax.swing.JTextField txtfClenAnt2;
    private javax.swing.JTextField txtfClenAnt3;
    private javax.swing.JTextField txtfClenAnt4;
    private javax.swing.JTextField txtfCoutAnt1;
    private javax.swing.JTextField txtfCoutAnt2;
    private javax.swing.JTextField txtfCoutAnt3;
    private javax.swing.JTextField txtfCoutAnt4;
    private javax.swing.JTextField txtfFrequenciaDeOperacao;
    private javax.swing.JTextField txtfIdEmpilhadeira;
    private javax.swing.JTextField txtfIpBackup;
    private javax.swing.JTextField txtfIpPrincipal;
    private javax.swing.JTextField txtfPortaBackup;
    private javax.swing.JTextField txtfPortaPrincipal;
    private javax.swing.JTextField txtfReflexaoAnt1;
    private javax.swing.JTextField txtfReflexaoAnt2;
    private javax.swing.JTextField txtfReflexaoAnt3;
    private javax.swing.JTextField txtfReflexaoAnt4;
    private javax.swing.JSpinner txtfRssiMinAnt1;
    private javax.swing.JSpinner txtfRssiMinAnt2;
    private javax.swing.JSpinner txtfRssiMinAnt3;
    private javax.swing.JSpinner txtfRssiMinAnt4;
    private javax.swing.JPasswordField txtfSenhaWifi;
    private javax.swing.JTextField txtfSsidWifi;
    // End of variables declaration//GEN-END:variables
}
